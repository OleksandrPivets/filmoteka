{"version":3,"sources":["js/apiService.js","js/variables.global.js","db/genres.json","js/trending.module.js","index.js"],"names":["BASE_URL","API_KEY","ApiService","constructor","searchQuery","page","getTrendingMovies","url","response","fetch","result","json","results","map","movie","poster_path","searchMovie","getMovieById","id","getGenres","incrementPage","decrementPage","resetPage","setPage","query","newQuery","apiService","refs","homeBtn","document","querySelector","libraryBtn","movieGallery","module","exports","genres","name","renderTrending","trending","innerHTML","console","log","addEventListener"],"mappings":"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","file":"src.0869862e.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a2131ad5d6a3f97436f48b66c08b88ca';\nexport default class ApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n  async getTrendingMovies() {\n    const url = `${BASE_URL}/trending/movie/day?page=${this.page}&api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    result.results.map(movie => {\n      movie.poster_path = 'https://image.tmdb.org/t/p/w500' + movie.poster_path;\n    });\n    return result;\n  }\n  async searchMovie() {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${this.searchQuery}&page=${this.page}&include_adult=false`;\n    const response = await fetch(url);\n    const result = await response.json();\n    result.results.map(movie => {\n      movie.poster_path = 'https://image.tmdb.org/t/p/w500' + movie.poster_path;\n    });\n    return result;\n  }\n  async getMovieById(id) {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    result.poster_path = 'https://image.tmdb.org/t/p/w500' + result.poster_path;\n    return result;\n  }\n  async getGenres() {\n    const url = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    return await response.json();\n  }\n  incrementPage() {\n    this.page += 1;\n  }\n\n  decrementPage() {\n    this.page -= 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  setPage(page) {\n    this.page = page;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","//  В этот файл добавляем только глобальные переменные которые будут использоваться в нескольких модулях.\n//  Локальные для модуля пишите в модуле\n//  Желательно подписывать комментами что это такое и для чего\n\n//  Тут импорты\nimport ApiService from './apiService';\n\n\n//  Тут переменные\nexport const apiService = new ApiService(); //  Апишка\n\n\n\n\n\n\n\n\n\n\n\n//  Ниже ссылки на обьекты DOM-дерева \nexport const refs = {\n    homeBtn: document.querySelector('[data-home]'),                     //  Просьба добавить эти два атрибута на кнопки в хедере\n    libraryBtn: document.querySelector('[data-library]'),               //  Просьба добавить эти два атрибута на кнопки в хедере\n    movieGallery: document.querySelector('[data-movie-gallery]')        //  Этот атрибут повесить на галерею\n\n\n}","module.exports={genres:[{id:28,name:\"Action\"},{id:12,name:\"Adventure\"},{id:16,name:\"Animation\"},{id:35,name:\"Comedy\"},{id:80,name:\"Crime\"},{id:99,name:\"Documentary\"},{id:18,name:\"Drama\"},{id:10751,name:\"Family\"},{id:14,name:\"Fantasy\"},{id:36,name:\"History\"},{id:27,name:\"Horror\"},{id:10402,name:\"Music\"},{id:9648,name:\"Mystery\"},{id:10749,name:\"Romance\"},{id:878,name:\"Science Fiction\"},{id:10770,name:\"TV Movie\"},{id:53,name:\"Thriller\"},{id:10752,name:\"War\"},{id:37,name:\"Western\"}]};","import { apiService, refs } from './variables.global';\nimport genres from '../db/genres.json'\n\n\nasync function renderTrending() {\n    const trending = await apiService.getTrendingMovies();\n    refs.movieGallery.innerHTML = '';\n    // refs.movieGallery.insertAdjacentHTML('beforeend', galleryItems(trending));\n    console.log(trending);\n    console.log(genres);\n    \n}\n//  Пока не доделано. Для доделки и переделки нужен темплейт и пагинатор\n\ndocument.addEventListener('DOMContentLoaded', renderTrending); \nrefs.homeBtn.addEventListener('click', renderTrending);","import './sass/main.scss';\nimport './js/trending.module';\n"]}
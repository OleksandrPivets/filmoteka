{"version":3,"sources":["db/genres.json","js/apiService.js","js/variables.global.js","js/trending.module.js","index.js"],"names":["module","exports","genres","id","name","BASE_URL","API_KEY","ApiService","constructor","searchQuery","page","getTrendingMovies","url","response","fetch","result","json","results","map","movie","poster_path","genre_ids","find","gen","searchMovie","getMovieById","genre","getGenres","incrementPage","decrementPage","resetPage","setPage","query","newQuery","apiService","refs","homeBtn","document","querySelector","libraryBtn","movieGallery","renderTrending","trending","console","log","addEventListener"],"mappings":"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","file":"src.a537f49b.js","sourceRoot":"../src","sourcesContent":["module.exports={genres:[{id:28,name:\"Action\"},{id:12,name:\"Adventure\"},{id:16,name:\"Animation\"},{id:35,name:\"Comedy\"},{id:80,name:\"Crime\"},{id:99,name:\"Documentary\"},{id:18,name:\"Drama\"},{id:10751,name:\"Family\"},{id:14,name:\"Fantasy\"},{id:36,name:\"History\"},{id:27,name:\"Horror\"},{id:10402,name:\"Music\"},{id:9648,name:\"Mystery\"},{id:10749,name:\"Romance\"},{id:878,name:\"Science Fiction\"},{id:10770,name:\"TV Movie\"},{id:53,name:\"Thriller\"},{id:10752,name:\"War\"},{id:37,name:\"Western\"}]};","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a2131ad5d6a3f97436f48b66c08b88ca';\nimport genres from '../db/genres';\nexport default class ApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n  async getTrendingMovies() {\n    const url = `${BASE_URL}/trending/movie/day?page=${this.page}&api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    result.results.map(movie => {\n      movie.poster_path = 'https://image.tmdb.org/t/p/w500' + movie.poster_path;\n      movie.genres = movie.genre_ids.map(id => genres.genres.find(gen => gen.id === id).name);\n      return movie;\n    });\n    return result;\n  }\n  async searchMovie() {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${this.searchQuery}&page=${this.page}&include_adult=false`;\n    const response = await fetch(url);\n    const result = await response.json();\n    result.results.map(movie => {\n      movie.poster_path = 'https://image.tmdb.org/t/p/w500' + movie.poster_path;\n      movie.genres = movie.genre_ids.map(id => genres.genres.find(gen => gen.id === id).name);\n      return movie;\n    });\n    return result;\n  }\n  async getMovieById(id) {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    result.poster_path = 'https://image.tmdb.org/t/p/w500' + result.poster_path;\n    result.genres = result.genres.map(genre => genre.name);\n    return result;\n  }\n  async getGenres() {\n    const url = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    return await response.json();\n  }\n  incrementPage() {\n    this.page += 1;\n  }\n\n  decrementPage() {\n    this.page -= 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  setPage(page) {\n    this.page = page;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","//  В этот файл добавляем только глобальные переменные которые будут использоваться в нескольких модулях.\n//  Локальные для модуля пишите в модуле\n//  Желательно подписывать комментами что это такое и для чего\n\n//  Тут импорты\nimport ApiService from './apiService';\n\n\n//  Тут переменные\nexport const apiService = new ApiService(); //  Апишка\n\n\n\n\n\n\n\n\n\n\n\n//  Ниже ссылки на обьекты DOM-дерева \nexport const refs = {\n    homeBtn: document.querySelector('[data-home]'),                     //  Просьба добавить эти два атрибута на кнопки в хедере\n    libraryBtn: document.querySelector('[data-library]'),               //  Просьба добавить эти два атрибута на кнопки в хедере\n    movieGallery: document.querySelector('[data-movie-gallery]')        //  Этот атрибут повесить на галерею\n\n\n}","import { apiService, refs } from './variables.global';\nimport genres from '../db/genres.json'\n\n\nasync function renderTrending() {\n    const trending = await apiService.getTrendingMovies();\n    // refs.movieGallery.innerHTML = '';\n    // refs.movieGallery.insertAdjacentHTML('beforeend', galleryItems(trending));\n    console.log(trending);\n    console.log(genres);\n    \n}\n//  Пока не доделано. Для доделки и переделки нужен темплейт и пагинатор\n\ndocument.addEventListener('DOMContentLoaded', renderTrending); \n// refs.homeBtn.addEventListener('click', renderTrending);","import './sass/main.scss';\nimport './js/trending.module';\n\n"]}